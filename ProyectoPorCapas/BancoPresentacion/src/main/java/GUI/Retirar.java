/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import com.mycompany.bancodominio.DAO.CuentaDAO;
import com.mycompany.banconegocio.controlCuenta;
import java.sql.Connection;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import com.mycompany.banconegocio.SesionUsuario;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.util.logging.Level;
import java.util.logging.Logger;
/**
 *
 * @author delll
 */
public class Retirar extends javax.swing.JFrame {
private Connection conexion;
private controlCuenta c;
    private int id;
    /**
     * Creates new form Retirar
     */
    public Retirar() {
        initComponents();
        centraVentana();
        c = new controlCuenta(conexion);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        botonRetirarDinero = new javax.swing.JButton();
        botonSalir = new javax.swing.JButton();
        montoDineroARetirar = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        ComboBox1 = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel2.setText("Monto a retirar");

        botonRetirarDinero.setText("Retirar dinero");
        botonRetirarDinero.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonRetirarDineroActionPerformed(evt);
            }
        });

        botonSalir.setText("Salir");
        botonSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonSalirActionPerformed(evt);
            }
        });

        montoDineroARetirar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                montoDineroARetirarActionPerformed(evt);
            }
        });
        montoDineroARetirar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                montoDineroARetirarKeyTyped(evt);
            }
        });

        jLabel1.setText("Retiro sin tarjeta");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(152, 152, 152)
                        .addComponent(jLabel2))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(botonSalir))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(115, 115, 115)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(montoDineroARetirar, javax.swing.GroupLayout.DEFAULT_SIZE, 143, Short.MAX_VALUE)
                            .addComponent(ComboBox1, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(136, 136, 136)
                        .addComponent(botonRetirarDinero)))
                .addContainerGap(135, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(7, 7, 7)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(montoDineroARetirar, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(ComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(botonRetirarDinero)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 39, Short.MAX_VALUE)
                .addComponent(botonSalir))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
     private int obtenerSaldoDisponible(int numeroCuenta) throws SQLException {
        // Creamos una instancia de CuentaDAO utilizando la conexión a la base de datos
        CuentaDAO cuentaDAO = new CuentaDAO(conexion);

        // Llamamos al método obtenerSaldo de CuentaDAO para obtener el saldo de la cuenta
        int saldoTotal = cuentaDAO.obtenerSaldo(numeroCuenta);

        // Retornamos el saldo obtenido
        return saldoTotal;
    }
    
    private void botonRetirarDineroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonRetirarDineroActionPerformed
         double montoARetirar = Double.parseDouble(montoDineroARetirar.getText());
         double saldoActual = 0;
         String datoSeleccionado = (String) ComboBox1.getSelectedItem();
        int dato = Integer.parseInt(datoSeleccionado);
          SesionUsuario sesionUsuario = SesionUsuario.getInstancia();
        id = c.obtenerClientePorTelefono(sesionUsuario.getTelefono());
        c.RellenarComboBox(ComboBox1, "numero_cuenta", id);
        // Obtener el saldo actual del cliente desde la base de datos
        try{
        saldoActual = obtenerSaldoDisponible(dato);
        }catch(SQLException ex){
            ex.printStackTrace();
        }
        if (saldoActual >= montoARetirar) {
             try {
                 // Permitir el retiro
                 double nuevoSaldo = saldoActual - montoARetirar;
                 // Actualizar el saldo en la base de datos
                 c.actualizarSaldoCliente(dato,nuevoSaldo);
                 c.GuardarDatosRetiro(dato,montoARetirar);
                 JOptionPane.showMessageDialog(this, "Retiro exitoso. Nuevo saldo: " + nuevoSaldo);
             } catch (SQLException ex) {
                 Logger.getLogger(Retirar.class.getName()).log(Level.SEVERE, null, ex);
             }
        } else {
            // Mostrar mensaje de error
            JOptionPane.showMessageDialog(this, "Fondos insuficientes para realizar el retiro.");
        }
    }//GEN-LAST:event_botonRetirarDineroActionPerformed

    private void botonSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonSalirActionPerformed
        // TODO add your handling code here:
        Inicio i= new Inicio();
        i.setVisible(true);
        dispose();
    }//GEN-LAST:event_botonSalirActionPerformed

    private void montoDineroARetirarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_montoDineroARetirarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_montoDineroARetirarActionPerformed

    private void montoDineroARetirarKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_montoDineroARetirarKeyTyped
        // TODO add your handling code here:
                 if(montoDineroARetirar.getText().length() >= 10){
        evt.consume();
    }
            int key = evt.getKeyChar();

    boolean numeros = key >= 48 && key <= 57;
        
    if (!numeros)
    {
        evt.consume();
    }

    if (montoDineroARetirar.getText().trim().length() == 10) {
        evt.consume();
    }
    
    }//GEN-LAST:event_montoDineroARetirarKeyTyped
private void centraVentana() {
        //Obtiene el tamaño de la pantalla
        Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();

        // Obtiene el tamaño de la ventana de la aplicación
        Dimension frameSize = getSize();

        // Se asegura que el tamaño de la ventana de la aplicación
        // no exceda el tamaño de la pantalla
        if (frameSize.height > screenSize.height) {
            frameSize.height = screenSize.height;
        }
        if (frameSize.width > screenSize.width) {
            frameSize.width = screenSize.width;
        }

        // Centra la ventana de la aplicación sobre la pantalla
        setLocation((screenSize.width - frameSize.width) / 2,
                (screenSize.height - frameSize.height) / 2);
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Retirar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Retirar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Retirar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Retirar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Retirar().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> ComboBox1;
    private javax.swing.JButton botonRetirarDinero;
    private javax.swing.JButton botonSalir;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JTextField montoDineroARetirar;
    // End of variables declaration//GEN-END:variables
}
